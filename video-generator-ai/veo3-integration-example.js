// Ejemplo de integraci√≥n de VEO3 en App.tsx\n// A√±ade estas l√≠neas a tu componente principal:\n\n// 1. Importar el servicio VEO3\nimport { veoService } from \"@/services/veo-service\";\n\n// 2. A√±adir estados para API\nconst [apiConfigured, setApiConfigured] = useState(false);\nconst [useVeoFast, setUseVeoFast] = useState(false);\nconst [apiKey, setApiKey] = useState('');\n\n// 3. Cargar API key al iniciar\nuseEffect(() => {\n  const savedApiKey = localStorage.getItem('veo3_api_key');\n  if (savedApiKey) {\n    setApiKey(savedApiKey);\n    veoService.setApiKey(savedApiKey);\n    setApiConfigured(true);\n  }\n}, []);\n\n// 4. Funci√≥n para conectar API\nconst connectApi = async () => {\n  if (!apiKey.trim()) return;\n  \n  const isValid = await veoService.validateApiKey(apiKey);\n  if (isValid) {\n    localStorage.setItem('veo3_api_key', apiKey);\n    veoService.setApiKey(apiKey);\n    setApiConfigured(true);\n  } else {\n    alert('API key inv√°lida');\n  }\n};\n\n// 5. Actualizar funci√≥n de generaci√≥n\nconst generateVideo = async () => {\n  // ... validaciones existentes ...\n  \n  if (apiConfigured) {\n    // Usar VEO3 real\n    try {\n      const result = useVeoFast \n        ? await veoService.generateVideoFast({ prompt: optimizedPrompt, config })\n        : await veoService.generateVideo({ prompt: optimizedPrompt, config });\n      \n      if (result.success) {\n        // Video generado exitosamente\n        setCurrentVideo({\n          ...newVideo,\n          status: 'completed',\n          url: result.videoUrl,\n          thumbnail: result.thumbnailUrl,\n          cost: result.estimatedCost\n        });\n      }\n    } catch (error) {\n      console.error('Error con VEO3:', error);\n    }\n  } else {\n    // Simulaci√≥n actual (mantener c√≥digo existente)\n    // ...\n  }\n};\n\n// 6. Actualizar c√°lculo de costos\nconst getCost = () => {\n  if (apiConfigured) {\n    return veoService.calculateVeoCost(config, useVeoFast);\n  }\n  return calculateCost(config); // Funci√≥n existente\n};\n\n// 7. A√±adir UI para configuraci√≥n de API (antes del bot√≥n generar)\n{!apiConfigured && (\n  <Card className=\"border-orange-200 dark:border-orange-800\">\n    <CardHeader>\n      <CardTitle className=\"text-orange-700 dark:text-orange-300\">\n        üîó Conectar VEO3 para Videos Reales\n      </CardTitle>\n      <CardDescription>\n        Usa la API de Google VEO3 para generar videos reales\n      </CardDescription>\n    </CardHeader>\n    <CardContent className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label>API Key de Google AI Studio</Label>\n        <Input\n          type=\"password\"\n          placeholder=\"Ingresa tu API key...\"\n          value={apiKey}\n          onChange={(e) => setApiKey(e.target.value)}\n        />\n      </div>\n      <Button onClick={connectApi} disabled={!apiKey.trim()}>\n        Conectar con VEO3\n      </Button>\n      <p className=\"text-xs text-muted-foreground\">\n        <a href=\"https://ai.google.dev\" target=\"_blank\" className=\"text-primary hover:underline\">\n          Obtener API Key gratuita ‚Üí\n        </a>\n      </p>\n    </CardContent>\n  </Card>\n)}\n\n// 8. A√±adir opciones VEO3 cuando est√© configurado\n{apiConfigured && (\n  <Card className=\"border-green-200 dark:border-green-800\">\n    <CardHeader>\n      <CardTitle className=\"text-green-700 dark:text-green-300\">\n        ‚úÖ VEO3 Conectado\n      </CardTitle>\n    </CardHeader>\n    <CardContent className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <Label>Modo VEO3 Fast</Label>\n          <p className=\"text-xs text-muted-foreground\">\n            M√°s r√°pido y econ√≥mico ($0.40/seg vs $0.75/seg)\n          </p>\n        </div>\n        <Switch\n          checked={useVeoFast}\n          onCheckedChange={setUseVeoFast}\n        />\n      </div>\n      \n      <div className=\"bg-muted/30 rounded p-3\">\n        <div className=\"flex justify-between text-sm\">\n          <span>Modelo activo:</span>\n          <Badge variant=\"secondary\">\n            {useVeoFast ? 'VEO 3 Fast' : 'VEO 3'}\n          </Badge>\n        </div>\n      </div>\n      \n      <Button \n        variant=\"outline\" \n        size=\"sm\" \n        onClick={() => {\n          localStorage.removeItem('veo3_api_key');\n          setApiConfigured(false);\n          setApiKey('');\n        }}\n      >\n        Desconectar API\n      </Button>\n    </CardContent>\n  </Card>\n)}\n\n// 9. Actualizar el bot√≥n de generar\n<Button \n  onClick={generateVideo} \n  disabled={!prompt.trim() || isGenerating || !!promptError}\n  className=\"w-full\"\n>\n  {isGenerating ? (\n    <>\n      <Loader className=\"w-4 h-4 mr-2 animate-spin\" />\n      {apiConfigured ? 'Generando con VEO3...' : 'Generando...'}\n    </>\n  ) : (\n    <>\n      <Zap className=\"w-5 h-5 mr-2\" />\n      {apiConfigured ? 'Generar Video con VEO3' : 'Generar Video (Demo)'}\n    </>\n  )}\n</Button>\n\n// 10. Actualizar indicador de costo\n<div className=\"bg-muted/20 rounded-lg p-4\">\n  <div className=\"flex items-center justify-between\">\n    <span className=\"text-sm font-medium\">Costo estimado:</span>\n    <Badge variant=\"secondary\" className=\"bg-primary/10 text-primary\">\n      ${getCost().toFixed(2)} USD\n    </Badge>\n  </div>\n  {apiConfigured && (\n    <p className=\"text-xs text-muted-foreground mt-2\">\n      Usando {useVeoFast ? 'VEO 3 Fast' : 'VEO 3'} - Costo real de Google\n    </p>\n  )}\n</div>"